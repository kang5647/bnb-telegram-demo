const __vite__fileDeps=["assets/loadCognitoIdentity-C1CIWsJb.js","assets/index-D9bIkFil.js","assets/lazy-json-GAqC3xmD.js","assets/index-CAp6xuhZ.js","assets/index-ZExjcRbi.css","assets/noAuth-BRTlyyWt.js","assets/parseJsonBody-BgXsR6VN.js","assets/loadSts-BPujJal6.js","assets/constants-EOWnxGfz.js","assets/index-ar-6fUSP.js","assets/create-aggregated-client-sX0lpe6c.js"],__vite__mapDeps=i=>i.map(i=>__vite__fileDeps[i]);
import{_ as m}from"./index-CAp6xuhZ.js";import{t as P,a as R,b as _,s as E,H as O,p as k,F as x}from"./lazy-json-GAqC3xmD.js";const I="The stream has already been transformed.",N=e=>{var n,s;if(!S(e)&&!T(e)){const i=((s=(n=e==null?void 0:e.__proto__)==null?void 0:n.constructor)==null?void 0:s.name)||e;throw new Error(`Unexpected stream implementation, expect Blob or ReadableStream, got ${i}`)}let t=!1;const o=async()=>{if(t)throw new Error(I);return t=!0,await E(e)},r=i=>{if(typeof i.stream!="function")throw new Error(`Cannot transform payload Blob to web stream. Please make sure the Blob.stream() is polyfilled.
If you are using React Native, this API is not yet supported, see: https://react-native.canny.io/feature-requests/p/fetch-streaming-body`);return i.stream()};return Object.assign(e,{transformToByteArray:o,transformToString:async i=>{const a=await o();if(i==="base64")return P(a);if(i==="hex")return R(a);if(i===void 0||i==="utf8"||i==="utf-8")return _(a);if(typeof TextDecoder=="function")return new TextDecoder(i).decode(a);throw new Error("TextDecoder is not available, please make sure polyfill is provided.")},transformToWebStream:()=>{if(t)throw new Error(I);if(t=!0,S(e))return r(e);if(T(e))return e;throw new Error(`Cannot transform payload to web stream, got ${e}`)}})},S=e=>typeof Blob=="function"&&e instanceof Blob,T=e=>typeof ReadableStream=="function"&&e instanceof ReadableStream;class g extends Error{constructor(t,o=!0){super(t),this.tryNextLink=o,this.name="ProviderError",Object.setPrototypeOf(this,g.prototype)}static from(t,o=!0){return Object.assign(new this(t.message,o),t)}}class c extends g{constructor(t,o=!0){super(t,o),this.tryNextLink=o,this.name="CredentialsProviderError",Object.setPrototypeOf(this,c.prototype)}}function A(e){return Promise.all(Object.keys(e).reduce((t,o)=>{const r=e[o];return typeof r=="string"?t.push([o,r]):t.push(r().then(n=>[o,n])),t},[])).then(t=>t.reduce((o,[r,n])=>(o[r]=n,o),{}))}function C(e){return async()=>{var a,d,u;(a=e.logger)==null||a.debug("@aws-sdk/credential-provider-cognito-identity","fromCognitoIdentity");const{GetCredentialsForIdentityCommand:t,CognitoIdentityClient:o}=await m(()=>import("./loadCognitoIdentity-C1CIWsJb.js").then(l=>l.a8),__vite__mapDeps([0,1,2,3,4,5,6])),{Credentials:{AccessKeyId:r=K(),Expiration:n,SecretKey:s=j(),SessionToken:i}=D()}=await(e.client??new o(Object.assign({},e.clientConfig??{},{region:((d=e.clientConfig)==null?void 0:d.region)??((u=e.parentClientConfig)==null?void 0:u.region)}))).send(new t({CustomRoleArn:e.customRoleArn,IdentityId:e.identityId,Logins:e.logins?await A(e.logins):void 0}));return{identityId:e.identityId,accessKeyId:r,secretAccessKey:s,sessionToken:i,expiration:n}}}function K(){throw new c("Response from Amazon Cognito contained no access key ID")}function D(){throw new c("Response from Amazon Cognito contained no credentials")}function j(){throw new c("Response from Amazon Cognito contained no secret key")}const p="IdentityIds";class H{constructor(t="aws:cognito-identity-ids"){this.dbName=t}getItem(t){return this.withObjectStore("readonly",o=>{const r=o.get(t);return new Promise(n=>{r.onerror=()=>n(null),r.onsuccess=()=>n(r.result?r.result.value:null)})}).catch(()=>null)}removeItem(t){return this.withObjectStore("readwrite",o=>{const r=o.delete(t);return new Promise((n,s)=>{r.onerror=()=>s(r.error),r.onsuccess=()=>n()})})}setItem(t,o){return this.withObjectStore("readwrite",r=>{const n=r.put({id:t,value:o});return new Promise((s,i)=>{n.onerror=()=>i(n.error),n.onsuccess=()=>s()})})}getDb(){const t=self.indexedDB.open(this.dbName,1);return new Promise((o,r)=>{t.onsuccess=()=>{o(t.result)},t.onerror=()=>{r(t.error)},t.onblocked=()=>{r(new Error("Unable to access DB"))},t.onupgradeneeded=()=>{const n=t.result;n.onerror=()=>{r(new Error("Failed to create object store"))},n.createObjectStore(p,{keyPath:"id"})}})}withObjectStore(t,o){return this.getDb().then(r=>{const n=r.transaction(p,t);return n.oncomplete=()=>r.close(),new Promise((s,i)=>{n.onerror=()=>i(n.error),s(o(n.objectStore(p)))}).catch(s=>{throw r.close(),s})})}}class M{constructor(t={}){this.store=t}getItem(t){return t in this.store?this.store[t]:null}removeItem(t){delete this.store[t]}setItem(t,o){this.store[t]=o}}const B=new M;function q(){return typeof self=="object"&&self.indexedDB?new H:typeof window=="object"&&window.localStorage?window.localStorage:B}function L({accountId:e,cache:t=q(),client:o,clientConfig:r,customRoleArn:n,identityPoolId:s,logins:i,userIdentifier:a=!i||Object.keys(i).length===0?"ANONYMOUS":void 0,logger:d,parentClientConfig:u}){d==null||d.debug("@aws-sdk/credential-provider-cognito-identity","fromCognitoIdentity");const l=a?`aws:cognito-identity-credentials:${s}:${a}`:void 0;let w=async()=>{const{GetIdCommand:h,CognitoIdentityClient:v}=await m(()=>import("./loadCognitoIdentity-C1CIWsJb.js").then(y=>y.a8),__vite__mapDeps([0,1,2,3,4,5,6])),b=o??new v(Object.assign({},r??{},{region:(r==null?void 0:r.region)??(u==null?void 0:u.region)}));let f=l&&await t.getItem(l);if(!f){const{IdentityId:y=W()}=await b.send(new h({AccountId:e,IdentityPoolId:s,Logins:i?await A(i):void 0}));f=y,l&&Promise.resolve(t.setItem(l,f)).catch(()=>{})}return w=C({client:b,customRoleArn:n,logins:i,identityId:f}),w()};return()=>w().catch(async h=>{throw l&&Promise.resolve(t.removeItem(l)).catch(()=>{}),h})}function W(){throw new c("Response from Amazon Cognito contained no identity ID")}const Z=e=>C({...e}),ee=e=>L({...e}),$="169.254.170.2",z="169.254.170.23",U="[fd00:ec2::23]",F=e=>{if(e.protocol!=="https:"&&!(e.hostname===$||e.hostname===z||e.hostname===U)){if(e.hostname.includes("[")){if(e.hostname==="[::1]"||e.hostname==="[0000:0000:0000:0000:0000:0000:0000:0001]")return}else{if(e.hostname==="localhost")return;const t=e.hostname.split("."),o=r=>{const n=parseInt(r,10);return 0<=n&&n<=255};if(t[0]==="127"&&o(t[1])&&o(t[2])&&o(t[3])&&t.length===4)return}throw new c(`URL not accepted. It must either be HTTPS or match one of the following:
  - loopback CIDR 127.0.0.0/8 or [::1/128]
  - ECS container host 169.254.170.2
  - EKS container host 169.254.170.23 or [fd00:ec2::23]`)}};function G(e){return new O({protocol:e.protocol,hostname:e.hostname,port:Number(e.port),path:e.pathname,query:Array.from(e.searchParams.entries()).reduce((t,[o,r])=>(t[o]=r,t),{}),fragment:e.hash})}async function V(e){const t=(e==null?void 0:e.headers["content-type"])??(e==null?void 0:e.headers["Content-Type"])??"";t.includes("json")||console.warn("HTTP credential provider response header content-type was not application/json. Observed: "+t+".");const r=await N(e.body).transformToString();if(e.statusCode===200){const n=JSON.parse(r);if(typeof n.AccessKeyId!="string"||typeof n.SecretAccessKey!="string"||typeof n.Token!="string"||typeof n.Expiration!="string")throw new c("HTTP credential provider response not of the required format, an object matching: { AccessKeyId: string, SecretAccessKey: string, Token: string, Expiration: string(rfc3339) }");return{accessKeyId:n.AccessKeyId,secretAccessKey:n.SecretAccessKey,sessionToken:n.Token,expiration:k(n.Expiration)}}if(e.statusCode>=400&&e.statusCode<500){let n={};try{n=JSON.parse(r)}catch{}throw Object.assign(new c(`Server responded with status: ${e.statusCode}`),{Code:n.Code,Message:n.Message})}throw new c(`Server responded with status: ${e.statusCode}`)}const J=(e,t,o)=>async()=>{for(let r=0;r<t;++r)try{return await e()}catch{await new Promise(s=>setTimeout(s,o))}return await e()},te=e=>{var s;(s=e.logger)==null||s.debug("@aws-sdk/credential-provider-http","fromHttp");let t;const o=e.credentialsFullUri;if(o)t=o;else throw new c("No HTTP credential provider host provided.");const r=new URL(t);F(r);const n=new x;return J(async()=>{const i=G(r);e.authorizationToken&&(i.headers.Authorization=e.authorizationToken);const a=await n.handle(i);return V(a.response)},e.maxRetries??3,e.timeout??1e3)},oe=e=>{let t;return async()=>{var i;(i=e.logger)==null||i.debug("@aws-sdk/credential-providers","fromTemporaryCredentials (STS)");const o={...e.params,RoleSessionName:e.params.RoleSessionName??"aws-sdk-js-"+Date.now()};if(o!=null&&o.SerialNumber){if(!e.mfaCodeProvider)throw new c("Temporary credential requires multi-factor authentication, but no MFA code callback was provided.",!1);o.TokenCode=await e.mfaCodeProvider(o==null?void 0:o.SerialNumber)}const{AssumeRoleCommand:r,STSClient:n}=await m(()=>import("./loadSts-BPujJal6.js").then(a=>a.z),__vite__mapDeps([7,2,1,3,4,8,5]));if(t||(t=new n({...e.clientConfig,credentials:e.masterCredentials})),e.clientPlugins)for(const a of e.clientPlugins)t.middlewareStack.use(a);const{Credentials:s}=await t.send(new r(o));if(!s||!s.AccessKeyId||!s.SecretAccessKey)throw new c(`Invalid response from STS.assumeRole call with role ${o.RoleArn}`);return{accessKeyId:s.AccessKeyId,secretAccessKey:s.SecretAccessKey,sessionToken:s.SessionToken,expiration:s.Expiration,credentialScope:s.CredentialScope}}},Y=e=>async()=>{var u;(u=e.logger)==null||u.debug("@aws-sdk/credential-provider-web-identity","fromWebToken");const{roleArn:t,roleSessionName:o,webIdentityToken:r,providerId:n,policyArns:s,policy:i,durationSeconds:a}=e;let{roleAssumerWithWebIdentity:d}=e;if(!d){const{getDefaultRoleAssumerWithWebIdentity:l}=await m(()=>import("./index-ar-6fUSP.js"),__vite__mapDeps([9,7,2,1,3,4,8,5,10]));d=l({...e.clientConfig,credentialProviderLogger:e.logger,parentClientConfig:e.parentClientConfig},e.clientPlugins)}return d({RoleArn:t,RoleSessionName:o??`aws-sdk-js-session-${Date.now()}`,WebIdentityToken:r,ProviderId:n,PolicyArns:s,Policy:i,DurationSeconds:a})},re=e=>Y({...e});export{Z as fromCognitoIdentity,ee as fromCognitoIdentityPool,te as fromHttp,oe as fromTemporaryCredentials,re as fromWebToken};
